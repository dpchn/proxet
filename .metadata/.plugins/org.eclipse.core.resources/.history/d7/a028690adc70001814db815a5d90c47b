package com.hotelproject.api.controller;

import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.hotelproject.api.form.UserForm;
import com.hotelproject.api.service.UserService;

@Controller

@RequestMapping("/user")
public class UserController {

	@Autowired
	UserService service;

	@RequestMapping(value = "/enrollpage", method = RequestMethod.GET)
	public String register() {
		System.out.println("Hello");
		return "register";
	}

	@RequestMapping(value = "/reg", method = RequestMethod.POST)
	public ModelAndView userRegister(@ModelAttribute("UserForm") @Valid UserForm form) {
		Map user = service.addUser(form.getName(), form.getEmail());
		ModelAndView view = new ModelAndView("profile");
		if (user != null) {
			view.addObject("user", user);
		}
		return view;
	}
	
	@RequestMapping(value = "/getLoginPage", method = RequestMethod.GET)
	public String getLoginPage(){
		return "login";
	}
	
	@RequestMapping(value = "login", method = RequestMethod.POST)
	public ModelAndView userLogin(HttpServletRequest request,@RequestParam("email") String email){
		System.out.println(email);
		Map map = service.login(email);
		
		if(map==null){
			return new ModelAndView("error");
		}else{
			request.getSession().setAttribute("email", email);
			ModelAndView view = new ModelAndView("profile");
			view.addObject("data",map);
			return view;
		}
	}

	@RequestMapping(value="/getHotelList",produces = MediaType.APPLICATION_JSON_VALUE)
	public static ModelAndView getHotelList(HttpServletRequest request) {
		JSONParser parser = new JSONParser();
		JSONArray jsonArray=null;
		request.setAttribute("userId", 1);
		try {
			jsonArray = (JSONArray) parser.parse(new FileReader("G:/hotel.json"));
		} catch (Exception e) {
			e.printStackTrace();
		}
		ModelAndView view = new ModelAndView("profile");
		view.addObject("hotelList", jsonArray);
		//return new ResponseEntity(jsonArray, HttpStatus.CONFLICT);
		return view;
	}
	
	
	@RequestMapping(value="/getHotel")
	public ModelAndView getHotel(@RequestParam("hotleId") String id){
		System.out.println("id : "+id);
		ModelAndView view = new ModelAndView("hotel");
		JSONParser parser = new JSONParser();
		JSONArray jsonArray=null;
		try {
			jsonArray = (JSONArray) parser.parse(new FileReader("G:/hotel.json"));
			for (Object object : jsonArray) {
				JSONObject data = (JSONObject) object;

				if(data.get("id").equals(id)){
					view.addObject("data", data);
					break;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return view;
	}
/*	public static void main(String[] args) {
		getHotelList();
	}*/

}
